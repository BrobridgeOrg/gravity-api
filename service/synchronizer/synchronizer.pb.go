// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.2
// source: synchronizer.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID       string   `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Key         []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Permissions []string `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Collections []string `protobuf:"bytes,4,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Key) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Key) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type UpdateKeyringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *UpdateKeyringRequest) Reset() {
	*x = UpdateKeyringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKeyringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyringRequest) ProtoMessage() {}

func (x *UpdateKeyringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyringRequest.ProtoReflect.Descriptor instead.
func (*UpdateKeyringRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateKeyringRequest) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type UpdateKeyringReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UpdateKeyringReply) Reset() {
	*x = UpdateKeyringReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKeyringReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyringReply) ProtoMessage() {}

func (x *UpdateKeyringReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyringReply.ProtoReflect.Descriptor instead.
func (*UpdateKeyringReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateKeyringReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateKeyringReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AssignPipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID   string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	PipelineID uint64 `protobuf:"varint,2,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
}

func (x *AssignPipelineRequest) Reset() {
	*x = AssignPipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPipelineRequest) ProtoMessage() {}

func (x *AssignPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPipelineRequest.ProtoReflect.Descriptor instead.
func (*AssignPipelineRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{3}
}

func (x *AssignPipelineRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AssignPipelineRequest) GetPipelineID() uint64 {
	if x != nil {
		return x.PipelineID
	}
	return 0
}

type AssignPipelineReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AssignPipelineReply) Reset() {
	*x = AssignPipelineReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignPipelineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPipelineReply) ProtoMessage() {}

func (x *AssignPipelineReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPipelineReply.ProtoReflect.Descriptor instead.
func (*AssignPipelineReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{4}
}

func (x *AssignPipelineReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssignPipelineReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RevokePipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID   string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	PipelineID uint64 `protobuf:"varint,2,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
}

func (x *RevokePipelineRequest) Reset() {
	*x = RevokePipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePipelineRequest) ProtoMessage() {}

func (x *RevokePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePipelineRequest.ProtoReflect.Descriptor instead.
func (*RevokePipelineRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{5}
}

func (x *RevokePipelineRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *RevokePipelineRequest) GetPipelineID() uint64 {
	if x != nil {
		return x.PipelineID
	}
	return 0
}

type RevokePipelineReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RevokePipelineReply) Reset() {
	*x = RevokePipelineReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokePipelineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePipelineReply) ProtoMessage() {}

func (x *RevokePipelineReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePipelineReply.ProtoReflect.Descriptor instead.
func (*RevokePipelineReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{6}
}

func (x *RevokePipelineReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokePipelineReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RegisterSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberID string `protobuf:"bytes,1,opt,name=subscriberID,proto3" json:"subscriberID,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	AppID        string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AccessKey    string `protobuf:"bytes,4,opt,name=AccessKey,proto3" json:"AccessKey,omitempty"`
}

func (x *RegisterSubscriberRequest) Reset() {
	*x = RegisterSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSubscriberRequest) ProtoMessage() {}

func (x *RegisterSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSubscriberRequest.ProtoReflect.Descriptor instead.
func (*RegisterSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterSubscriberRequest) GetSubscriberID() string {
	if x != nil {
		return x.SubscriberID
	}
	return ""
}

func (x *RegisterSubscriberRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterSubscriberRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *RegisterSubscriberRequest) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type RegisterSubscriberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RegisterSubscriberReply) Reset() {
	*x = RegisterSubscriberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSubscriberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSubscriberReply) ProtoMessage() {}

func (x *RegisterSubscriberReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSubscriberReply.ProtoReflect.Descriptor instead.
func (*RegisterSubscriberReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterSubscriberReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterSubscriberReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UnregisterSubscriberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberID string `protobuf:"bytes,1,opt,name=subscriberID,proto3" json:"subscriberID,omitempty"`
}

func (x *UnregisterSubscriberRequest) Reset() {
	*x = UnregisterSubscriberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterSubscriberRequest) ProtoMessage() {}

func (x *UnregisterSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterSubscriberRequest.ProtoReflect.Descriptor instead.
func (*UnregisterSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{9}
}

func (x *UnregisterSubscriberRequest) GetSubscriberID() string {
	if x != nil {
		return x.SubscriberID
	}
	return ""
}

type UnregisterSubscriberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UnregisterSubscriberReply) Reset() {
	*x = UnregisterSubscriberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterSubscriberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterSubscriberReply) ProtoMessage() {}

func (x *UnregisterSubscriberReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterSubscriberReply.ProtoReflect.Descriptor instead.
func (*UnregisterSubscriberReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{10}
}

func (x *UnregisterSubscriberReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterSubscriberReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SubscribeToCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberID string   `protobuf:"bytes,1,opt,name=subscriberID,proto3" json:"subscriberID,omitempty"`
	Collections  []string `protobuf:"bytes,2,rep,name=Collections,proto3" json:"Collections,omitempty"`
}

func (x *SubscribeToCollectionsRequest) Reset() {
	*x = SubscribeToCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToCollectionsRequest) ProtoMessage() {}

func (x *SubscribeToCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToCollectionsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{11}
}

func (x *SubscribeToCollectionsRequest) GetSubscriberID() string {
	if x != nil {
		return x.SubscriberID
	}
	return ""
}

func (x *SubscribeToCollectionsRequest) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type SubscribeToCollectionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason      string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Collections []string `protobuf:"bytes,3,rep,name=Collections,proto3" json:"Collections,omitempty"`
}

func (x *SubscribeToCollectionsReply) Reset() {
	*x = SubscribeToCollectionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToCollectionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToCollectionsReply) ProtoMessage() {}

func (x *SubscribeToCollectionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToCollectionsReply.ProtoReflect.Descriptor instead.
func (*SubscribeToCollectionsReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{12}
}

func (x *SubscribeToCollectionsReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubscribeToCollectionsReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SubscribeToCollectionsReply) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type UnsubscribeFromCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberID string   `protobuf:"bytes,1,opt,name=subscriberID,proto3" json:"subscriberID,omitempty"`
	Collections  []string `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *UnsubscribeFromCollectionsRequest) Reset() {
	*x = UnsubscribeFromCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFromCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFromCollectionsRequest) ProtoMessage() {}

func (x *UnsubscribeFromCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFromCollectionsRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeFromCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{13}
}

func (x *UnsubscribeFromCollectionsRequest) GetSubscriberID() string {
	if x != nil {
		return x.SubscriberID
	}
	return ""
}

func (x *UnsubscribeFromCollectionsRequest) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type UnsubscribeFromCollectionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []string `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *UnsubscribeFromCollectionsReply) Reset() {
	*x = UnsubscribeFromCollectionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFromCollectionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFromCollectionsReply) ProtoMessage() {}

func (x *UnsubscribeFromCollectionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFromCollectionsReply.ProtoReflect.Descriptor instead.
func (*UnsubscribeFromCollectionsReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{14}
}

func (x *UnsubscribeFromCollectionsReply) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

type GetPipelineStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineID string `protobuf:"bytes,1,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
}

func (x *GetPipelineStateRequest) Reset() {
	*x = GetPipelineStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineStateRequest) ProtoMessage() {}

func (x *GetPipelineStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineStateRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineStateRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{15}
}

func (x *GetPipelineStateRequest) GetPipelineID() string {
	if x != nil {
		return x.PipelineID
	}
	return ""
}

type GetPipelineStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	LastSeq uint64 `protobuf:"varint,3,opt,name=lastSeq,proto3" json:"lastSeq,omitempty"`
}

func (x *GetPipelineStateReply) Reset() {
	*x = GetPipelineStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineStateReply) ProtoMessage() {}

func (x *GetPipelineStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineStateReply.ProtoReflect.Descriptor instead.
func (*GetPipelineStateReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{16}
}

func (x *GetPipelineStateReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetPipelineStateReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetPipelineStateReply) GetLastSeq() uint64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

type PipelineFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriberID string `protobuf:"bytes,1,opt,name=subscriberID,proto3" json:"subscriberID,omitempty"`
	PipelineID   uint64 `protobuf:"varint,2,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
	StartAt      uint64 `protobuf:"varint,3,opt,name=startAt,proto3" json:"startAt,omitempty"`
	Offset       uint64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Count        int64  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PipelineFetchRequest) Reset() {
	*x = PipelineFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineFetchRequest) ProtoMessage() {}

func (x *PipelineFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineFetchRequest.ProtoReflect.Descriptor instead.
func (*PipelineFetchRequest) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{17}
}

func (x *PipelineFetchRequest) GetSubscriberID() string {
	if x != nil {
		return x.SubscriberID
	}
	return ""
}

func (x *PipelineFetchRequest) GetPipelineID() uint64 {
	if x != nil {
		return x.PipelineID
	}
	return 0
}

func (x *PipelineFetchRequest) GetStartAt() uint64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *PipelineFetchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PipelineFetchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PipelineFetchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Count   uint64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	LastSeq uint64 `protobuf:"varint,4,opt,name=lastSeq,proto3" json:"lastSeq,omitempty"`
}

func (x *PipelineFetchReply) Reset() {
	*x = PipelineFetchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_synchronizer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineFetchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineFetchReply) ProtoMessage() {}

func (x *PipelineFetchReply) ProtoReflect() protoreflect.Message {
	mi := &file_synchronizer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineFetchReply.ProtoReflect.Descriptor instead.
func (*PipelineFetchReply) Descriptor() ([]byte, []int) {
	return file_synchronizer_proto_rawDescGZIP(), []int{18}
}

func (x *PipelineFetchReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PipelineFetchReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PipelineFetchReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PipelineFetchReply) GetLastSeq() uint64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

var File_synchronizer_proto protoreflect.FileDescriptor

var file_synchronizer_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x22, 0x71,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x49, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a,
	0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x46, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x13, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x87, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x1b, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x19, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x1d, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x71, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x69, 0x0a, 0x21, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x43,
	0x0a, 0x1f, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x39, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x63,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x65, 0x71, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x12, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71,
	0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_synchronizer_proto_rawDescOnce sync.Once
	file_synchronizer_proto_rawDescData = file_synchronizer_proto_rawDesc
)

func file_synchronizer_proto_rawDescGZIP() []byte {
	file_synchronizer_proto_rawDescOnce.Do(func() {
		file_synchronizer_proto_rawDescData = protoimpl.X.CompressGZIP(file_synchronizer_proto_rawDescData)
	})
	return file_synchronizer_proto_rawDescData
}

var file_synchronizer_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_synchronizer_proto_goTypes = []interface{}{
	(*Key)(nil),                               // 0: gravity.api.synchronizer.Key
	(*UpdateKeyringRequest)(nil),              // 1: gravity.api.synchronizer.UpdateKeyringRequest
	(*UpdateKeyringReply)(nil),                // 2: gravity.api.synchronizer.UpdateKeyringReply
	(*AssignPipelineRequest)(nil),             // 3: gravity.api.synchronizer.AssignPipelineRequest
	(*AssignPipelineReply)(nil),               // 4: gravity.api.synchronizer.AssignPipelineReply
	(*RevokePipelineRequest)(nil),             // 5: gravity.api.synchronizer.RevokePipelineRequest
	(*RevokePipelineReply)(nil),               // 6: gravity.api.synchronizer.RevokePipelineReply
	(*RegisterSubscriberRequest)(nil),         // 7: gravity.api.synchronizer.RegisterSubscriberRequest
	(*RegisterSubscriberReply)(nil),           // 8: gravity.api.synchronizer.RegisterSubscriberReply
	(*UnregisterSubscriberRequest)(nil),       // 9: gravity.api.synchronizer.UnregisterSubscriberRequest
	(*UnregisterSubscriberReply)(nil),         // 10: gravity.api.synchronizer.UnregisterSubscriberReply
	(*SubscribeToCollectionsRequest)(nil),     // 11: gravity.api.synchronizer.SubscribeToCollectionsRequest
	(*SubscribeToCollectionsReply)(nil),       // 12: gravity.api.synchronizer.SubscribeToCollectionsReply
	(*UnsubscribeFromCollectionsRequest)(nil), // 13: gravity.api.synchronizer.UnsubscribeFromCollectionsRequest
	(*UnsubscribeFromCollectionsReply)(nil),   // 14: gravity.api.synchronizer.UnsubscribeFromCollectionsReply
	(*GetPipelineStateRequest)(nil),           // 15: gravity.api.synchronizer.GetPipelineStateRequest
	(*GetPipelineStateReply)(nil),             // 16: gravity.api.synchronizer.GetPipelineStateReply
	(*PipelineFetchRequest)(nil),              // 17: gravity.api.synchronizer.PipelineFetchRequest
	(*PipelineFetchReply)(nil),                // 18: gravity.api.synchronizer.PipelineFetchReply
}
var file_synchronizer_proto_depIdxs = []int32{
	0, // 0: gravity.api.synchronizer.UpdateKeyringRequest.keys:type_name -> gravity.api.synchronizer.Key
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_synchronizer_proto_init() }
func file_synchronizer_proto_init() {
	if File_synchronizer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_synchronizer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKeyringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKeyringReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignPipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignPipelineReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokePipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokePipelineReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSubscriberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterSubscriberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterSubscriberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToCollectionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFromCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFromCollectionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPipelineStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPipelineStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_synchronizer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineFetchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_synchronizer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_synchronizer_proto_goTypes,
		DependencyIndexes: file_synchronizer_proto_depIdxs,
		MessageInfos:      file_synchronizer_proto_msgTypes,
	}.Build()
	File_synchronizer_proto = out.File
	file_synchronizer_proto_rawDesc = nil
	file_synchronizer_proto_goTypes = nil
	file_synchronizer_proto_depIdxs = nil
}
