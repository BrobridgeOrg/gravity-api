// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_source_adapter.proto

package gravity_api_dsa

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublishRequest struct {
	EventName            string   `protobuf:"bytes,1,opt,name=eventName,proto3" json:"eventName,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_102a39ffe4b3d003, []int{0}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *PublishRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type PublishReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishReply) Reset()         { *m = PublishReply{} }
func (m *PublishReply) String() string { return proto.CompactTextString(m) }
func (*PublishReply) ProtoMessage()    {}
func (*PublishReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_102a39ffe4b3d003, []int{1}
}

func (m *PublishReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishReply.Unmarshal(m, b)
}
func (m *PublishReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishReply.Marshal(b, m, deterministic)
}
func (m *PublishReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishReply.Merge(m, src)
}
func (m *PublishReply) XXX_Size() int {
	return xxx_messageInfo_PublishReply.Size(m)
}
func (m *PublishReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishReply.DiscardUnknown(m)
}

var xxx_messageInfo_PublishReply proto.InternalMessageInfo

func (m *PublishReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PublishReply) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*PublishRequest)(nil), "gravity.api.dsa.PublishRequest")
	proto.RegisterType((*PublishReply)(nil), "gravity.api.dsa.PublishReply")
}

func init() { proto.RegisterFile("data_source_adapter.proto", fileDescriptor_102a39ffe4b3d003) }

var fileDescriptor_102a39ffe4b3d003 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xad, 0x87, 0x5d, 0x3b, 0x2c, 0x8a, 0x39, 0x48, 0x15, 0xc5, 0xa5, 0xa7, 0x9e, 0x72,
	0xd0, 0x17, 0x50, 0xf0, 0x20, 0x08, 0x22, 0xf1, 0x01, 0xea, 0xb4, 0x19, 0xb4, 0x10, 0x9b, 0x98,
	0x49, 0x0a, 0x79, 0x7b, 0x31, 0xb6, 0x8a, 0xc2, 0x1e, 0xbf, 0xe1, 0xe7, 0xe3, 0x63, 0xe0, 0x54,
	0x63, 0xc0, 0x96, 0x6d, 0xf4, 0x3d, 0xb5, 0xa8, 0xd1, 0x05, 0xf2, 0xd2, 0x79, 0x1b, 0xac, 0x38,
	0x7a, 0xf5, 0x38, 0x0d, 0x21, 0x49, 0x74, 0x83, 0xd4, 0x8c, 0xf5, 0x3d, 0x1c, 0x3e, 0xc5, 0xce,
	0x0c, 0xfc, 0xa6, 0xe8, 0x23, 0x12, 0x07, 0x71, 0x0e, 0x25, 0x4d, 0x34, 0x86, 0x47, 0x7c, 0xa7,
	0xaa, 0xd8, 0x16, 0x4d, 0xa9, 0x7e, 0x0f, 0xa2, 0x82, 0xb5, 0xc3, 0x64, 0x2c, 0xea, 0x6a, 0x7f,
	0x5b, 0x34, 0x1b, 0xb5, 0x60, 0x7d, 0x03, 0x9b, 0x1f, 0x93, 0x33, 0xe9, 0x6b, 0xc9, 0xb1, 0xef,
	0x89, 0x39, 0x5b, 0x0e, 0xd4, 0x82, 0xe2, 0x04, 0x56, 0x9e, 0x90, 0xed, 0x98, 0x15, 0xa5, 0x9a,
	0xe9, 0xea, 0x05, 0x8e, 0xef, 0x30, 0xe0, 0x73, 0x0e, 0xbf, 0xfd, 0xee, 0x16, 0x0f, 0xb0, 0x9e,
	0xb5, 0xe2, 0x52, 0xfe, 0xab, 0x97, 0x7f, 0xd3, 0xcf, 0x2e, 0x76, 0x0f, 0x9c, 0x49, 0xf5, 0x5e,
	0xb7, 0xca, 0x5f, 0xb8, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xa5, 0x3c, 0x47, 0x22, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataSourceAdapterClient is the client API for DataSourceAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataSourceAdapterClient interface {
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishReply, error)
}

type dataSourceAdapterClient struct {
	cc *grpc.ClientConn
}

func NewDataSourceAdapterClient(cc *grpc.ClientConn) DataSourceAdapterClient {
	return &dataSourceAdapterClient{cc}
}

func (c *dataSourceAdapterClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishReply, error) {
	out := new(PublishReply)
	err := c.cc.Invoke(ctx, "/gravity.api.dsa.DataSourceAdapter/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataSourceAdapterServer is the server API for DataSourceAdapter service.
type DataSourceAdapterServer interface {
	Publish(context.Context, *PublishRequest) (*PublishReply, error)
}

// UnimplementedDataSourceAdapterServer can be embedded to have forward compatible implementations.
type UnimplementedDataSourceAdapterServer struct {
}

func (*UnimplementedDataSourceAdapterServer) Publish(ctx context.Context, req *PublishRequest) (*PublishReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Publish not implemented")
}

func RegisterDataSourceAdapterServer(s *grpc.Server, srv DataSourceAdapterServer) {
	s.RegisterService(&_DataSourceAdapter_serviceDesc, srv)
}

func _DataSourceAdapter_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataSourceAdapterServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gravity.api.dsa.DataSourceAdapter/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataSourceAdapterServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataSourceAdapter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gravity.api.dsa.DataSourceAdapter",
	HandlerType: (*DataSourceAdapterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _DataSourceAdapter_Publish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data_source_adapter.proto",
}
